import atexit
import os
import readline
import sys

if 'PYTHONHISTFILE' in os.environ:
    histfile = os.path.expanduser(os.environ['PYTHONHISTFILE'])
    # sometimes fails: https://stackoverflow.com/questions/17824898/why-does-readline-read-history-file-give-me-ioerror-errno-2-no-such-file-or
    readline.read_history_file(histfile)
    atexit.register(readline.write_history_file, histfile)
else:
    print("WARNING: no history file found, not reading history")
    readline.write_history_file = lambda *args: None

try:
    import numpy as np
    np.set_printoptions(linewidth=200, threshold=sys.maxsize, precision=8)
except ImportError:
    pass

# nonsense to get the python traceback easier for me to read
# ======================================
import os
def xfname(tb):
    abs_path = tb.tb_frame.f_code.co_filename
    rel_path = os.path.relpath(abs_path, os.getcwd())
    argmin = lambda x, y: x if len(x) < len(y) else y
    return argmin(abs_path, rel_path)
def excepthook(exc_type, exc_value, tb):
    xlineno = lambda tb: tb.tb_lineno
    xname = lambda tb: tb.tb_frame.f_code.co_name
    print('==================================================================')
    print('Traceback:')
    while tb:
        # lineno is left justified, width of 3
        print(f"{xfname(tb)}:{xlineno(tb):<3} in {xname(tb)}")
        tb = tb.tb_next

    r = "\x1b[31m"; p = "\x1b[35m"; c = "\x1b[0m" # ansi colors
    print(f"{r}{exc_type.__name__}{c}: {p}{exc_value}{c}")
sys.excepthook = excepthook
# ======================================
